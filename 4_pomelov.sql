--=============== МОДУЛЬ 4. УГЛУБЛЕНИЕ В SQL =======================================
--= ПОМНИТЕ, ЧТО НЕОБХОДИМО УСТАНОВИТЬ ВЕРНОЕ СОЕДИНЕНИЕ И ВЫБРАТЬ СХЕМУ PUBLIC===========
SET search_path TO public;

--======== ОСНОВНАЯ ЧАСТЬ ==============

--ЗАДАНИЕ №1
--База данных: если подключение к облачной базе, то создаёте новую схему с префиксом в --виде фамилии, название должно быть на латинице в нижнем регистре и таблицы создаете --в этой новой схеме, если подключение к локальному серверу, то создаёте новую схему и --в ней создаёте таблицы.

--Спроектируйте базу данных, содержащую три справочника:
--· язык (английский, французский и т. п.);
--· народность (славяне, англосаксы и т. п.);
--· страны (Россия, Германия и т. п.).
--Две таблицы со связями: язык-народность и народность-страна, отношения многие ко многим. Пример таблицы со связями — film_actor.
--Требования к таблицам-справочникам:
--· наличие ограничений первичных ключей.
--· идентификатору сущности должен присваиваться автоинкрементом;
--· наименования сущностей не должны содержать null-значения, не должны допускаться --дубликаты в названиях сущностей.
--Требования к таблицам со связями:
--· наличие ограничений первичных и внешних ключей.

--В качестве ответа на задание пришлите запросы создания таблиц и запросы по --добавлению в каждую таблицу по 5 строк с данными.
 
--СОЗДАНИЕ ТАБЛИЦЫ ЯЗЫКИ

create table language1 (
 	language_id serial primary key,
 	"name" varchar (50) not null unique,
 	)

--ВНЕСЕНИЕ ДАННЫХ В ТАБЛИЦУ ЯЗЫКИ

insert into language1 ("name")
 		values
 		('Russian'),
 		('Deutsch'),
 		('Chainese'),
 		('English'),
 		('French')

--СОЗДАНИЕ ТАБЛИЦЫ НАРОДНОСТИ

create table nation (
 	nation_id serial primary key,
 	"name" varchar (50) not null unique 
 	)

--ВНЕСЕНИЕ ДАННЫХ В ТАБЛИЦУ НАРОДНОСТИ

insert into nation  ("name")
 		values
 		('Русский'),
 		('Немец'),
 		('Китаец'),
 		('Американец'),
 		('Француз')

--СОЗДАНИЕ ТАБЛИЦЫ СТРАНЫ

create table country (
 	country_id serial primary key,
 	"name" varchar (50) not null unique 
 	)

--ВНЕСЕНИЕ ДАННЫХ В ТАБЛИЦУ СТРАНЫ

insert into country ("name")
 		values
 		('Russia'),
 		('Germany'),
 		('Chaina'),
 		('USA'),
 		('France')

--СОЗДАНИЕ ПЕРВОЙ ТАБЛИЦЫ СО СВЯЗЯМИ

create table language1_nation (
 	language_id int2 not null references language1(language_id),
 	nation_id int2 not null references nation(nation_id)
 	)

--ВНЕСЕНИЕ ДАННЫХ В ТАБЛИЦУ СО СВЯЗЯМИ

insert into language1_nation  (language_id, nation_id)
 		values
 		(1,1),
 		(1,2),
 		(1,3),
 		(2,3),
 		(2,2),
 		(2,1)

--СОЗДАНИЕ ВТОРОЙ ТАБЛИЦЫ СО СВЯЗЯМИ

create table country_nation (
 	country_id int2 not null references country(country_id),
 	nation_id int2 not null references nation(nation_id)
 	)

--ВНЕСЕНИЕ ДАННЫХ В ТАБЛИЦУ СО СВЯЗЯМИ

insert into country_nation  (country_id, nation_id)
 		values
 		(1,1),
 		(1,3),
 		(1,4),
 		(2,2),
 		(2,5),
 		(2,1)

